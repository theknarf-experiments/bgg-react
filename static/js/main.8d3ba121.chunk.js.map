{"version":3,"sources":["app.js","index.js"],"names":["fetcher","url","fetch","then","response","text","DOMParser","parseFromString","Item","xml","className","src","ValueOf","select","style","maxHeight","alt","User","username","useSWR","revalidateOnFocus","revalidateOnReconnect","refreshWhenOffline","refreshWhenHidden","refreshInterval","data","error","console","log","Component","App","useState","user","setUser","userToLoad","setUserToLoad","value","onChange","e","target","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAKMA,G,MAAU,SAACC,GAChB,OAAOC,MAAMD,GACXE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAI,IAAIE,aAAYC,gBAAgBH,QAG9CI,EAAO,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACf,OAAO,sBAAKC,UAAU,OAAf,UACN,qBAAKC,IAAKC,kBAAQ,CAACH,MAAKI,OAAQ,UAAWC,MAAO,CAAEC,UAAW,SAAWC,IAAI,KAC9E,gCACC,cAAC,UAAD,CAASP,IAAKA,EAAKI,OAAO,SAAU,IADrC,IAC0C,cAAC,UAAD,CAASJ,IAAKA,EAAKI,OAAO,kBADpE,WAMII,EAAO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACNC,YAAO,yDAAD,OAC4BD,GACzDlB,EACA,CACCoB,mBAAmB,EACnBC,uBAAuB,EACvBC,oBAAoB,EACpBC,mBAAmB,EACnBC,gBAAiB,IARXC,EADsB,EACtBA,KAAMC,EADgB,EAChBA,MAYd,OAAID,GAASC,EACVA,GACFC,QAAQC,IAAIF,GACL,mDAGD,cAAC,gBAAD,CAAejB,IAAKgB,EAAMZ,OAAO,SAASgB,UAAWrB,IANjC,gDAgCbsB,EAvBH,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACTC,EADS,KACHC,EADG,OAEqBF,qBAFrB,mBAETG,EAFS,KAEGC,EAFH,KAMjB,OAAO,gCACN,kCACC,4CACA,uBAAOC,MAAOJ,EAAMK,SANL,SAACC,GAAD,OAAOL,EAAQK,EAAEC,OAAOH,aAQxC,8BAEEF,EAGA,cAAC,EAAD,CAAMhB,SAAUgB,IAFhB,yBAAQM,QAVK,kBAAML,EAAcH,IAUjC,kBAAgCA,WCpDpCS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8d3ba121.chunk.js","sourcesContent":["import { useState } from 'react';\nimport useSWR from 'swr';\nimport { DOMParser, ApplyTemplate, ValueOf } from 'react-xslt';\nimport './app.css';\n\nconst fetcher = (url) => {\n\treturn fetch(url)\n\t\t.then(response => response.text())\n\t\t.then(response => new DOMParser().parseFromString(response));\n}\n\nconst Item = ({ xml }) => {\n\treturn <div className=\"card\">\n\t\t<img src={ValueOf({xml, select: 'image'})} style={{ maxHeight: '200px' }} alt=\"\" />\n\t\t<div>\n\t\t\t<ValueOf xml={xml} select=\"name\" />{\" \"}(<ValueOf xml={xml} select=\"yearpublished\" />)\n\t\t</div>\n\t</div>;\n};\n\nconst User = ({ username }) => {\n\tconst { data, error } = useSWR(\n\t\t`https://boardgamegeek.com/xmlapi2/collection?username=${username}`,\n\t\tfetcher,\n\t\t{\n\t\t\trevalidateOnFocus: false,\n\t\t\trevalidateOnReconnect: false,\n\t\t\trefreshWhenOffline: false,\n\t\t\trefreshWhenHidden: false,\n\t\t\trefreshInterval: 0\n\t\t},\n\t);\n\n\tif(!data && !error) return <div> Loading... </div>;\n\tif(error) {\n\t\tconsole.log(error);\n\t\treturn <div> Error loading </div>;\n\t}\n\n\treturn <ApplyTemplate xml={data} select=\"//item\" Component={Item} />;\n};\n\nconst App = () => {\n\tconst [ user, setUser ] = useState(\"\");\n\tconst [ userToLoad, setUserToLoad ] = useState();\n\tconst onChange = (e) => setUser(e.target.value);\n\tconst onClick = () => setUserToLoad(user);\n\n\treturn <div>\n\t\t<label>\n\t\t\t<h1> BGG User </h1>\n\t\t\t<input value={user} onChange={onChange} />\n\t\t</label>\n\t\t<div>\n\t\t{\n\t\t\t!userToLoad ? (\n\t\t\t\t<button onClick={onClick}>Load {user}</button>\n\t\t\t) : (\n\t\t\t\t<User username={userToLoad} />\n\t\t\t)\n\t\t}\n\t\t</div>\n\t</div>;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}